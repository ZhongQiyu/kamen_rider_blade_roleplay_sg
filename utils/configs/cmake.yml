name: MacOS

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build
      
    - name: Build dependencies
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      shell: bash
      run:  |
            brew install vtk boost eigen flann qt@5 libgeotiff pcl
            export PKG_CONFIG_PATH="/usr/local/opt/qt/lib/pkgconfig"
            mkdir ${{runner.workspace}}/deps
            cd ${{runner.workspace}}/deps
            git clone https://github.com/libLAS/libLAS.git liblas
            mkdir liblas_build
            cd liblas_build
            cmake -S../liblas
            make
            make install
            cd .. 
            
    
    - name: Configure 3DForest - Cmake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DVTK_DIR="/usr/local/opt/vtk/lib/cmake/vtk" -DPCL_INCLUDE="/usr/local/include/pcl-1.12/" -DQt5Widgets_DIR="/usr/local/opt/qt/lib/cmake/QtWidgets" -DQt5Config_DIR="/usr/local/opt/qt/lib/cmake/QtConfig"

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: |
            make
            make 3DForest
            ls
            

    - name: Konec
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
